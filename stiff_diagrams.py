# -*- coding: utf-8 -*-
"""
Created on Wed Mar 17 10:11:57 2021

@author: Michael J. Murphy
"""
from bokeh.plotting import figure, output_file, show
from bokeh.models import CategoricalAxis, FactorRange
import pandas as pd
from meq_calcs import MeqCalc

# Test data
# TODO: Replace with pandas dataframes generated by meq_calcs
anion_data = [-3, -1.75, -4.5]
cation_data = [3, 1.0, 4.75]

anion_axis_labels = ["HCO3-", "SO4--", "Cl-"]
cation_axis_labels =  ['Mg++', "Ca++", "Na+ + K+"]

class StiffDiagram:
    
    def __init__(self, data, anion_axis_labels=["HCO3-", "SO4--", "Cl-"], cation_axis_labels=["Mg++", "Ca++", "Na+ + K+"]):
        self.data = data
        self.anion_axis_labels = anion_axis_labels
        self.cation_axis_labels = cation_axis_labels
        self.df = MeqCalc(self.data).calc_meq()
        
    def plot(self, style='reg', color='blue', output='png', height=500, width=555):

        locs = self.df["LocCode"].unique().tolist()
        chems = self.df["ChemName"].unique().tolist()
        
        # Generate plots
        for l in locs[0:5]:
            plot_data = self.df.loc[self.df.LocCode==l]
            #  Extract calculated charge concentrations
            anion_data = [plot_data["meq/L"].loc[plot_data.ion == i].values[:].sum() for i in self.anion_axis_labels]
            cation_data = [plot_data["meq/L"].loc[plot_data.ion == i].values[:].sum() for i in self.cation_axis_labels]
            p2 = figure(height=height, title=l, width=width, x_axis_label="meq/L",
                         y_range=self.anion_axis_labels, toolbar_location=None)
            #p2.title = l 
            p2.harea(x1=[0, 0, 0], x2=anion_data, y=self.anion_axis_labels)
            p2.extra_y_ranges = {"cation_range": FactorRange(factors=self.cation_axis_labels, range_padding=-0.5)}
            p2.add_layout(CategoricalAxis(y_range_name="cation_range"), 'right')
            p2.harea(x1=[0, 0, 0], x2=cation_data, y=self.anion_axis_labels) # For this to work, cation y-axis must be same as anion y-axis; should be converted to single dummty axis to avoid confusion
            p2.line(x=0, y=self.anion_axis_labels, color='black', width=1.5)
            show(p2)  
            

